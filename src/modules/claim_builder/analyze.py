from datetime import datetime, timezone
from src.modules.claim_builder.schema import (
    IFU,
    ClaimBuilder,
    Compliance,
    ComplianceStatus,
    Draft,
    IFUSource,
    MissingElement,
    MissingElementLevel,
    PhraseConflict,
    RiskIndicator,
    RiskIndicatorSeverity,
)


async def analyze_claim_builder(product_id: str) -> ClaimBuilder:
    claim_builder = ClaimBuilder(
        product_id=product_id,
        draft=[
            Draft(
                version=0,
                updated_at=datetime.now(timezone.utc),
                updated_by="AI",
                content="This is a draft claim generated by AI for product_id: {}".format(
                    product_id
                ),
                submitted=False,
                accepted=False,
            )
        ],
        key_phrases=[
            "High quality material",
            "Complies with EU regulations",
        ],
        ifu=[
            IFU(
                phrase="The ",
            ),
            IFU(
                phrase="Product",
                sources=[
                    IFUSource(
                        source="Source 1",
                        reason="Reason 1",
                        category="Source Category 1",
                    ),
                    IFUSource(
                        source="Source 2",
                        reason="Reason 2",
                        category="Source Category 2",
                    ),
                    IFUSource(
                        source="Source 3",
                        reason="Reason 3",
                        category="Source Category 3",
                    ),
                ],
            ),
            IFU(
                phrase=" is indicated use in ",
            ),
            IFU(
                phrase="therapeutic area",
                sources=[
                    IFUSource(
                        source="Source 1",
                        reason="Reason 1",
                        category="Source Category 1",
                    ),
                    IFUSource(
                        source="Source 2",
                        reason="Reason 2",
                        category="Source Category 2",
                    ),
                ],
            ),
            IFU(
                phrase=" for the treatment of ",
            ),
            IFU(
                phrase="specific conditions",
                sources=[
                    IFUSource(
                        source="Source 1",
                        reason="Reason 1",
                        category="Source Category 1",
                    ),
                    IFUSource(
                        source="Source 2",
                        reason="Reason 2",
                        category="Source Category 2",
                    ),
                    IFUSource(
                        source="Source 3",
                        reason="Reason 3",
                        category="Source Category 3",
                    ),
                ],
            ),
            IFU(
                phrase=" patients who ",
            ),
            IFU(
                phrase="patient population",
                sources=[
                    IFUSource(
                        source="Source 1",
                        reason="Reason 1",
                        category="Source Category 1",
                    ),
                    IFUSource(
                        source="Source 2",
                        reason="Reason 2",
                        category="Source Category 2",
                    ),
                ],
            ),
        ],
        compliance=[
            Compliance(
                content="This is OK compliance",
                status=ComplianceStatus.OK,
            ),
            Compliance(
                content="This is WARNING compliance",
                status=ComplianceStatus.WARNING,
            ),
            Compliance(
                content="This is CRITICAL compliance",
                status=ComplianceStatus.CRITICAL,
            ),
        ],
        missing_elements=[
            MissingElement(
                id=0,
                description="This is minor missing element",
                suggested_fix="Add safety instructions to the product documentation.",
                level=MissingElementLevel.MINOR,
            ),
            MissingElement(
                id=1,
                description="This is major missing element",
                suggested_fix="Include detailed usage instructions in the product manual.",
                level=MissingElementLevel.MAJOR,
            ),
            MissingElement(
                id=2,
                description="This is critical missing element",
                suggested_fix="Ensure the product complies with all safety regulations.",
                level=MissingElementLevel.CRITICAL,
            ),
        ],
        risk_indicators=[
            RiskIndicator(
                description="This is a low risk indicator",
                severity=RiskIndicatorSeverity.LOW,
            ),
            RiskIndicator(
                description="This is a medium risk indicator",
                severity=RiskIndicatorSeverity.MEDIUM,
            ),
            RiskIndicator(
                description="This is a high risk indicator",
                severity=RiskIndicatorSeverity.HIGH,
            ),
        ],
        phrase_conflicts=[
            PhraseConflict(
                id=0,
                statement="This is a phrase conflict statement",
                conflicting_regulation="This is the conflicting regulation",
                suggested_fix="This is the suggested fix for the phrase conflict",
            ),
            PhraseConflict(
                id=1,
                statement="This is another phrase conflict statement",
                conflicting_regulation="This is another conflicting regulation",
                suggested_fix="This is another suggested fix for the phrase conflict",
            ),
            PhraseConflict(
                id=2,
                statement="This is yet another phrase conflict statement",
                conflicting_regulation="This is yet another conflicting regulation",
                suggested_fix="This is yet another suggested fix for the phrase conflict",
            ),
        ],
        user_acceptance=False,
    )
    return claim_builder
